version: "3.8"

services:
  redis:
    image: redis:7-alpine
    command:
      [
        "redis-server",
        "--appendonly",
        "yes",
        "--requirepass",
        "${REDIS_PASSWORD:-password}",
      ]
    ports:
      - "6379:6379" # optional publish untuk akses dari host
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: solana-auth-backend
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "5000:5000" # server kamu expose 5000 â†’ publish 5000
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000 # pastikan server listen ke 5000
      # --- Supabase & JWT ---
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
      JWT_SECRET: ${JWT_SECRET}
      # --- Redis URL: pakai hostname service 'redis' di dalam network ---
      REDIS_URL: redis://default:${REDIS_PASSWORD:-password}@redis:6379
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:5000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 40s

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
